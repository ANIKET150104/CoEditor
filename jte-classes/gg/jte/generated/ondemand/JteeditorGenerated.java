package gg.jte.generated.ondemand;
@SuppressWarnings("unchecked")
public final class JteeditorGenerated {
	public static final String JTE_NAME = "editor.jte";
	public static final int[] JTE_LINE_INFO = {57,57,57,57,57,57,57,66,80,90,121,152,152,152,152,152,152};
	public static void render(gg.jte.html.HtmlTemplateOutput jteOutput, gg.jte.html.HtmlInterceptor jteHtmlInterceptor) {
		jteOutput.writeContent("<!doctype html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"utf-8\">\r\n  <title>Editor</title>\r\n  <script src=\"https://unpkg.com/htmx.org@1.9.12\"></script>\r\n  <script src=\"https://cdn.jsdelivr.net/npm/sockjs-client@1/dist/sockjs.min.js\"></script>\r\n  <script src=\"https://cdn.jsdelivr.net/npm/stompjs@2.3.3/lib/stomp.min.js\"></script>\r\n\r\n  <link rel=\"stylesheet\" href=\"https://unpkg.com/codemirror@5.65.15/lib/codemirror.css\">\r\n  <script src=\"https://unpkg.com/codemirror@5.65.15/lib/codemirror.js\"></script>\r\n  <script src=\"https://unpkg.com/codemirror@5.65.15/mode/javascript/javascript.js\"></script>\r\n  <script src=\"https://unpkg.com/codemirror@5.65.15/mode/python/python.js\"></script>\r\n  <script src=\"https://unpkg.com/codemirror@5.65.15/mode/clike/clike.js\"></script>\r\n  <link rel=\"stylesheet\" href=\"/css/app.css\">\r\n\r\n  <style>\r\n    .panes { display:flex; gap:16px; }\r\n    .pane { flex:1; min-height:480px; background:#fff; border:1px solid #ddd; border-radius:10px; }\r\n    #editor { height: 60vh; }\r\n    #spinner { display:none; }\r\n    .htmx-request #spinner { display:inline-block; }\r\n  </style>\r\n</head>\r\n<body>\r\n  <div class=\"container\">\r\n    <h1>Collaborative Editor</h1>\r\n\r\n    <div style=\"display:flex; gap:12px; align-items:center; margin-bottom:12px;\">\r\n      <label>Language</label>\r\n      <select id=\"langSel\">\r\n        <option value=\"63\" data-mode=\"javascript\">JavaScript</option>\r\n        <option value=\"71\" data-mode=\"python\">Python</option>\r\n        <option value=\"54\" data-mode=\"text/x-c++src\">C++</option>\r\n        <option value=\"62\" data-mode=\"text/x-java\">Java</option>\r\n      </select>\r\n\r\n      <button id=\"runBtn\"\r\n              hx-post=\"/run\"\r\n              hx-target=\"#output\"\r\n              hx-indicator=\"#spinner\"\r\n              hx-headers='{\"Accept\": \"text/plain\"}'>\r\n        Run\r\n      </button>\r\n      <span id=\"spinner\" class=\"spinner\"></span>\r\n    </div>\r\n\r\n    <div class=\"panes\">\r\n      <div class=\"pane\"><div id=\"editor\"></div></div>\r\n      <div class=\"pane\">\r\n        <textarea id=\"stdin\" placeholder=\"stdin...\" rows=\"6\" style=\"width:100%;border:0;border-bottom:1px solid #ddd;padding:8px\"></textarea>\r\n        <pre id=\"output\" style=\"margin:0;padding:12px;white-space:pre-wrap\"></pre>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <script>\r\n    ");
		jteOutput.writeContent("\n    document.body.addEventListener(\"htmx:configRequest\", function(evt) {\r\n      const token = localStorage.getItem(\"jwt\");\r\n      if (token) evt.detail.headers[\"Authorization\"] = \"Bearer \" + token;\r\n      evt.detail.parameters[\"languageId\"] = document.getElementById('langSel').value;\r\n      evt.detail.parameters[\"stdin\"] = document.getElementById('stdin').value;\r\n      evt.detail.parameters[\"code\"] = (window.cm) ? window.cm.getValue() : '';\r\n    });\r\n\r\n    ");
		jteOutput.writeContent("\n    const cm = CodeMirror(document.getElementById('editor'), {\r\n      value: \"// Write code here\\n\",\r\n      lineNumbers: true,\r\n      mode: \"javascript\"\r\n    });\r\n    window.cm = cm;\r\n\r\n    const langSel = document.getElementById('langSel');\r\n    langSel.addEventListener('change', function () {\r\n      cm.setOption('mode', this.selectedOptions[0].dataset.mode);\r\n      sendEditorEvent('LANG_CHANGE', null);\r\n    });\r\n\r\n    ");
		jteOutput.writeContent("\n    const roomId = location.pathname.split('/').pop();\r\n    let stomp = null;\r\n    const clientId = Math.random().toString(36).slice(2);\r\n\r\n    function connectWS() {\r\n      const token = localStorage.getItem(\"jwt\") || \"\";\r\n      const sock = new SockJS('/ws?token=' + encodeURIComponent(token));\r\n      stomp = Stomp.over(sock);\r\n      stomp.debug = null;\r\n      ");
		jteOutput.writeContent("\n      stomp.connect({}, onConnect, onError);\r\n    }\r\n\r\n    function onConnect() {\r\n      stomp.subscribe('/topic/' + roomId, frame => {\r\n        const msg = JSON.parse(frame.body);\r\n        switch (msg.type) {\r\n          case 'FULL_SYNC':\r\n            if (msg.language) {\r\n              const target = String(msg.language);\r\n              const opt = [...langSel.options].find(o => o.value === target);\r\n              if (opt) { opt.selected = true; cm.setOption('mode', opt.dataset.mode); }\r\n            }\r\n            if (typeof msg.code === 'string') cm.setValue(msg.code);\r\n            break;\r\n          case 'LANG_CHANGE':\r\n            {\r\n              const target = String(msg.language);\r\n              const opt = [...langSel.options].find(o => o.value === target);\r\n              if (opt) { opt.selected = true; cm.setOption('mode', opt.dataset.mode); }\r\n            }\r\n            break;\r\n          case 'CODE_UPDATE':\r\n          default:\r\n            if (msg.sender !== clientId && typeof msg.code === 'string') {\r\n              cm.setValue(msg.code);\r\n            }\r\n        }\r\n      });\r\n\r\n      ");
		jteOutput.writeContent("\n      sendEditorEvent('REQUEST_FULL', null);\r\n    }\r\n\r\n    function onError() {\r\n      alert('WebSocket disconnected. Reconnecting in 3sâ€¦');\r\n      setTimeout(connectWS, 3000);\r\n    }\r\n\r\n    connectWS();\r\n\r\n    function sendEditorEvent(type, codeOverride) {\r\n      if (!stomp || !stomp.connected) return;\r\n      const payload = {\r\n        type,\r\n        roomId,\r\n        sender: clientId,\r\n        code: codeOverride != null ? codeOverride : cm.getValue(),\r\n        language: document.getElementById('langSel').value\r\n      };\r\n      stomp.send('/app/editor/' + roomId, {}, JSON.stringify(payload));\r\n    }\r\n\r\n    let debounce;\r\n    cm.on('change', () => {\r\n      clearTimeout(debounce);\r\n      debounce = setTimeout(() => sendEditorEvent('CODE_UPDATE', null), 200);\r\n    });\r\n  </script>\r\n</body>\r\n</html>\r\n");
	}
	public static void renderMap(gg.jte.html.HtmlTemplateOutput jteOutput, gg.jte.html.HtmlInterceptor jteHtmlInterceptor, java.util.Map<String, Object> params) {
		render(jteOutput, jteHtmlInterceptor);
	}
}
